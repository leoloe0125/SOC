

================================================================
== Vitis HLS Report for 'paralleltostreamwithburst'
================================================================
* Date:           Sat May 11 22:35:40 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        UserDMA
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_98_1  |        ?|        ?|     3 ~ ?|          -|          -|     ?|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 5 2 
2 --> 3 
3 --> 4 5 
4 --> 5 
5 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.40>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %m2s_enb_clrsts_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%in_m2s_len_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_m2s_len"   --->   Operation 7 'read' 'in_m2s_len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%in_Img_width_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_Img_width"   --->   Operation 8 'read' 'in_Img_width_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%in_en_clrsts_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %in_en_clrsts"   --->   Operation 9 'read' 'in_en_clrsts_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%in_memory_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %in_memory"   --->   Operation 10 'read' 'in_memory_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (3.40ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i1P0A, i1 %m2s_enb_clrsts_c, i1 %in_en_clrsts_read"   --->   Operation 11 'write' 'write_ln0' <Predicate = true> <Delay = 3.40> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %outcount48, void @empty_14, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i40 %outbuf, void @empty_14, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem1, void @empty_16, i32 0, i32 0, void @empty_17, i32 10, i32 1024, void @empty_20, void @empty_19, void @empty_17, i32 16, i32 16, i32 16, i32 64, void @empty_17, void @empty_17"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln93 = br i1 %in_en_clrsts_read, void, void %.loopexit" [UserDMA/userdma.cpp:93]   --->   Operation 15 'br' 'br_ln93' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%first_load = load i1 %first" [UserDMA/userdma.cpp:94]   --->   Operation 16 'load' 'first_load' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln94 = br i1 %first_load, void %._crit_edge1, void" [UserDMA/userdma.cpp:94]   --->   Operation 17 'br' 'br_ln94' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%store_ln95 = store i32 %in_m2s_len_read, i32 %m2s_len" [UserDMA/userdma.cpp:95]   --->   Operation 18 'store' 'store_ln95' <Predicate = (!in_en_clrsts_read & first_load)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.29ns)   --->   "%store_ln96 = store i1 0, i1 %first" [UserDMA/userdma.cpp:96]   --->   Operation 19 'store' 'store_ln96' <Predicate = (!in_en_clrsts_read & first_load)> <Delay = 1.29>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln97 = br void %._crit_edge1" [UserDMA/userdma.cpp:97]   --->   Operation 20 'br' 'br_ln97' <Predicate = (!in_en_clrsts_read & first_load)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%idx = alloca i32 1"   --->   Operation 21 'alloca' 'idx' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%count = alloca i32 1"   --->   Operation 22 'alloca' 'count' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%in_Img_width_cast = zext i32 %in_Img_width_read"   --->   Operation 23 'zext' 'in_Img_width_cast' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.89ns)   --->   "%sub_i_i = add i33 %in_Img_width_cast, i33 8589934591"   --->   Operation 24 'add' 'sub_i_i' <Predicate = (!in_en_clrsts_read)> <Delay = 1.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%m2s_len_load = load i32 %m2s_len" [UserDMA/userdma.cpp:99]   --->   Operation 25 'load' 'm2s_len_load' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.29ns)   --->   "%store_ln98 = store i32 %m2s_len_load, i32 %count" [UserDMA/userdma.cpp:98]   --->   Operation 26 'store' 'store_ln98' <Predicate = (!in_en_clrsts_read)> <Delay = 1.29>
ST_1 : Operation 27 [1/1] (1.29ns)   --->   "%store_ln98 = store i64 0, i64 %idx" [UserDMA/userdma.cpp:98]   --->   Operation 27 'store' 'store_ln98' <Predicate = (!in_en_clrsts_read)> <Delay = 1.29>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln98 = br void" [UserDMA/userdma.cpp:98]   --->   Operation 28 'br' 'br_ln98' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.26>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%count_2 = load i32 %count"   --->   Operation 29 'load' 'count_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specloopname_ln99 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [UserDMA/userdma.cpp:99]   --->   Operation 30 'specloopname' 'specloopname_ln99' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.96ns)   --->   "%icmp_ln99 = icmp_sgt  i32 %count_2, i32 16" [UserDMA/userdma.cpp:99]   --->   Operation 31 'icmp' 'icmp_ln99' <Predicate = true> <Delay = 1.96> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.29ns)   --->   "%br_ln99 = br i1 %icmp_ln99, void, void %._crit_edge2" [UserDMA/userdma.cpp:99]   --->   Operation 32 'br' 'br_ln99' <Predicate = true> <Delay = 1.29>
ST_2 : Operation 33 [1/1] (1.29ns)   --->   "%store_ln103 = store i1 1, i1 %first" [UserDMA/userdma.cpp:103]   --->   Operation 33 'store' 'store_ln103' <Predicate = (!icmp_ln99)> <Delay = 1.29>
ST_2 : Operation 34 [1/1] (1.29ns)   --->   "%br_ln0 = br void %._crit_edge2"   --->   Operation 34 'br' 'br_ln0' <Predicate = (!icmp_ln99)> <Delay = 1.29>

State 3 <SV = 2> <Delay = 5.94>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%count_1 = phi i32 %count_2, void, i32 16, void"   --->   Operation 35 'phi' 'count_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i32 %count_1" [UserDMA/userdma.cpp:86]   --->   Operation 36 'trunc' 'trunc_ln86' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.87ns)   --->   "%sub = add i31 %trunc_ln86, i31 2147483647" [UserDMA/userdma.cpp:86]   --->   Operation 37 'add' 'sub' <Predicate = true> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (1.96ns)   --->   "%icmp_ln106 = icmp_sgt  i32 %count_1, i32 0" [UserDMA/userdma.cpp:106]   --->   Operation 38 'icmp' 'icmp_ln106' <Predicate = true> <Delay = 1.96> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln106 = br i1 %icmp_ln106, void %._crit_edge, void %.lr.ph" [UserDMA/userdma.cpp:106]   --->   Operation 39 'br' 'br_ln106' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%idx_load = load i64 %idx" [UserDMA/userdma.cpp:106]   --->   Operation 40 'load' 'idx_load' <Predicate = (icmp_ln106)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node add_ln106)   --->   "%shl_ln106 = shl i64 %idx_load, i64 2" [UserDMA/userdma.cpp:106]   --->   Operation 41 'shl' 'shl_ln106' <Predicate = (icmp_ln106)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (2.69ns) (out node of the LUT)   --->   "%add_ln106 = add i64 %shl_ln106, i64 %in_memory_read" [UserDMA/userdma.cpp:106]   --->   Operation 42 'add' 'add_ln106' <Predicate = (icmp_ln106)> <Delay = 2.69> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln106, i32 2, i32 63" [UserDMA/userdma.cpp:106]   --->   Operation 43 'partselect' 'trunc_ln2' <Predicate = (icmp_ln106)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%empty = wait i32 @_ssdm_op_Wait"   --->   Operation 44 'wait' 'empty' <Predicate = (icmp_ln106)> <Delay = 0.00>
ST_3 : Operation 45 [2/2] (3.25ns)   --->   "%call_ln106 = call void @paralleltostreamwithburst_Pipeline_VITIS_LOOP_106_2, i32 %gmem1, i62 %trunc_ln2, i31 %trunc_ln86, i31 %sub, i32 %in_m2s_len_read, i33 %sub_i_i, i40 %outbuf, i31 %trunc_ln86, i32 %m2s_len, i32 %Img_width_count" [UserDMA/userdma.cpp:106]   --->   Operation 45 'call' 'call_ln106' <Predicate = (icmp_ln106)> <Delay = 3.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 46 [1/2] (0.00ns)   --->   "%call_ln106 = call void @paralleltostreamwithburst_Pipeline_VITIS_LOOP_106_2, i32 %gmem1, i62 %trunc_ln2, i31 %trunc_ln86, i31 %sub, i32 %in_m2s_len_read, i33 %sub_i_i, i40 %outbuf, i31 %trunc_ln86, i32 %m2s_len, i32 %Img_width_count" [UserDMA/userdma.cpp:106]   --->   Operation 46 'call' 'call_ln106' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 3.98>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%empty_57 = wait i32 @_ssdm_op_Wait"   --->   Operation 47 'wait' 'empty_57' <Predicate = (!in_en_clrsts_read & icmp_ln106)> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln0 = br void %._crit_edge"   --->   Operation 48 'br' 'br_ln0' <Predicate = (!in_en_clrsts_read & icmp_ln106)> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%idx_load_2 = load i64 %idx" [UserDMA/userdma.cpp:129]   --->   Operation 49 'load' 'idx_load_2' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (3.30ns)   --->   "%write_ln173 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %outcount48, i32 %count_1" [X:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:173]   --->   Operation 50 'write' 'write_ln173' <Predicate = (!in_en_clrsts_read)> <Delay = 3.30> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.30> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 64> <FIFO>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln129 = sext i32 %count_1" [UserDMA/userdma.cpp:129]   --->   Operation 51 'sext' 'sext_ln129' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (2.69ns)   --->   "%add_ln129 = add i64 %sext_ln129, i64 %idx_load_2" [UserDMA/userdma.cpp:129]   --->   Operation 52 'add' 'add_ln129' <Predicate = (!in_en_clrsts_read)> <Delay = 2.69> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%m2s_len_load_1 = load i32 %m2s_len" [UserDMA/userdma.cpp:131]   --->   Operation 53 'load' 'm2s_len_load_1' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (1.96ns)   --->   "%icmp_ln131 = icmp_eq  i32 %m2s_len_load_1, i32 0" [UserDMA/userdma.cpp:131]   --->   Operation 54 'icmp' 'icmp_ln131' <Predicate = (!in_en_clrsts_read)> <Delay = 1.96> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln131 = br i1 %icmp_ln131, void %._crit_edge._crit_edge, void %.loopexit.loopexit" [UserDMA/userdma.cpp:131]   --->   Operation 55 'br' 'br_ln131' <Predicate = (!in_en_clrsts_read)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (1.29ns)   --->   "%store_ln131 = store i32 %m2s_len_load_1, i32 %count" [UserDMA/userdma.cpp:131]   --->   Operation 56 'store' 'store_ln131' <Predicate = (!in_en_clrsts_read & !icmp_ln131)> <Delay = 1.29>
ST_5 : Operation 57 [1/1] (1.29ns)   --->   "%store_ln131 = store i64 %add_ln129, i64 %idx" [UserDMA/userdma.cpp:131]   --->   Operation 57 'store' 'store_ln131' <Predicate = (!in_en_clrsts_read & !icmp_ln131)> <Delay = 1.29>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln131 = br void" [UserDMA/userdma.cpp:131]   --->   Operation 58 'br' 'br_ln131' <Predicate = (!in_en_clrsts_read & !icmp_ln131)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.loopexit"   --->   Operation 59 'br' 'br_ln0' <Predicate = (!in_en_clrsts_read & icmp_ln131)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%ret_ln133 = ret" [UserDMA/userdma.cpp:133]   --->   Operation 60 'ret' 'ret_ln133' <Predicate = (icmp_ln131) | (in_en_clrsts_read)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.4ns
The critical path consists of the following:
	wire read operation ('in_en_clrsts_read') on port 'in_en_clrsts' [15]  (0 ns)
	fifo write operation ('write_ln0') on port 'm2s_enb_clrsts_c' [17]  (3.4 ns)

 <State 2>: 3.26ns
The critical path consists of the following:
	'load' operation ('count') on local variable 'count' [39]  (0 ns)
	'icmp' operation ('icmp_ln99', UserDMA/userdma.cpp:99) [41]  (1.97 ns)
	multiplexor before 'phi' operation ('count') with incoming values : ('count') [47]  (1.3 ns)

 <State 3>: 5.95ns
The critical path consists of the following:
	'load' operation ('idx_load', UserDMA/userdma.cpp:106) on local variable 'idx' [53]  (0 ns)
	'shl' operation ('shl_ln106', UserDMA/userdma.cpp:106) [54]  (0 ns)
	'add' operation ('add_ln106', UserDMA/userdma.cpp:106) [55]  (2.69 ns)
	'call' operation ('call_ln106', UserDMA/userdma.cpp:106) to 'paralleltostreamwithburst_Pipeline_VITIS_LOOP_106_2' [58]  (3.26 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 3.99ns
The critical path consists of the following:
	'load' operation ('idx_load_2', UserDMA/userdma.cpp:129) on local variable 'idx' [62]  (0 ns)
	'add' operation ('add_ln129', UserDMA/userdma.cpp:129) [65]  (2.69 ns)
	'store' operation ('store_ln131', UserDMA/userdma.cpp:131) of variable 'add_ln129', UserDMA/userdma.cpp:129 on local variable 'idx' [71]  (1.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
